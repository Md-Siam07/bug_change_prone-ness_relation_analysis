Method,Used Classes
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes,"Md5CryptTest, String, Crypt"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary,
org.apache.commons.codec.CharEncodingTest.testUtf16,
org.apache.commons.codec.binary.Base64Test.testIsStringBase64,"Base64Test, Base64"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.NysiisTest.testDad,"StringBuilder, NysiisTest, Nysiis"
org.apache.commons.codec.language.SoundexTest.testNewInstance3,"Soundex, SoundexTest"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty,"BeiderMorseEncoderTest, BeiderMorseEncoder"
org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode,"StringUtils, Base64Test, Base64"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException,"Languages, BeiderMorseEncoderTest"
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt,"UnixCrypt, UnixCryptTest, String"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder,"StringBuilder, String, Arrays, Base64Codec13Test, Base64, BinaryDecoder"
org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16,"StringUtilsTest, String, StringUtils"
org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds,"Base32OutputStreamTest, ByteArrayOutputStream, Base32OutputStream"
org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1,"HexTest, Hex"
org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey,"HmacUtils, HmacUtilsTest"
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput,"Md5CryptTest, Crypt"
org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters,"HexTest, Hex"
org.apache.commons.codec.language.Caverphone1Test.testEndMb,Caverphone1Test
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan,
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters,"DaitchMokotoffSoundexTest, DaitchMokotoffSoundex"
org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage,"Base64OutputStreamTest, ByteArrayOutputStream, Base64OutputStream"
org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean,"StringUtils, Base64Test, String, Base64"
org.apache.commons.codec.binary.Base64Test.testKnownDecodings,"Base64Test, String, Base64"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter,
org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData,"Sha256CryptTest, Sha2Crypt"
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt,"Md5Crypt, String, Md5CryptTest"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh,"BeiderMorseEncoderTest, BeiderMorseEncoder"
org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject,
org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184,"DoubleMetaphone, DoubleMetaphoneTest"
org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException,"DigestUtils, DigestUtilsTest"
org.apache.commons.codec.language.SoundexTest.testNewInstance2,"Soundex, String, SoundexTest"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex,"Soundex, SoundexTest"
org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable,"DecoderException, DecoderExceptionTest"
org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter,"Base64Test, String, Base64"
org.apache.commons.codec.DecoderExceptionTest.testConstructorString,"DecoderException, DecoderExceptionTest"
org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd,"Base64InputStreamTest, StringUtils, ByteArrayInputStream, Base64InputStream"
org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode,"Base64Codec13Test, StringBuilder, String, Arrays, Base64"
org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull,"URLCodec, URLCodecTest"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException,"BeiderMorseEncoderTest, Rule"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1,"String, Arrays, StringUtilsTest, StringUtils"
org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY,"Metaphone, MetaphoneTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes,"HexTest, String, ByteBuffer, Hex"
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes,"Md5Crypt, Apr1CryptTest, String"
org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex,"ByteBuffer, DigestUtilsTest, DigestUtils, StringUtils, ByteArrayInputStream"
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt,"Md5Crypt, Apr1CryptTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac,"Mac, HmacUtils, HmacUtilsTest"
org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull,"BCodec, BCodecTest"
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt,"Md5Crypt, Apr1CryptTest, String"
org.apache.commons.codec.digest.DigestUtilsTest.testConstructable,"DigestUtils, DigestUtilsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.QCodecTest.testNullInput,"QCodecTest, QCodec"
org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt,"String, Sha256CryptTest, Sha2Crypt"
org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella,ColognePhoneticTest
org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes,SoundexTest
org.apache.commons.codec.digest.DigestUtilsTest.testSha256,"ByteBuffer, DigestUtilsTest, DigestUtils, StringUtils, ByteArrayInputStream"
org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex,"StringUtils, HexTest, String, Hex"
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall,"Md5Crypt, String, Md5CryptTest"
org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition,
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex,"ByteArrayInputStream, HmacUtils, HmacUtilsTest, String"
org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3,"HexTest, Hex"
org.apache.commons.codec.language.SoundexTest.testNewInstance,"Soundex, SoundexTest"
org.apache.commons.codec.digest.Sha2CryptTest.testCtor,"Sha2CryptTest, Sha2Crypt"
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullSalt,
org.apache.commons.codec.binary.HexTest.testEncodeClassCastException,"HexTest, Hex"
org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest,"StringBuilder, DoubleMetaphone, DoubleMetaphoneTest"
org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks,"Rule$Phoneme, CharSequence, RuleTest"
org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize,"InputStream, Base64InputStreamTest, Arrays, System, Base64InputStream, Base64TestData, ByteArrayInputStream"
org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1,"StringUtilsTest, String, StringUtils"
org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException,"BinaryCodec, Object, BinaryCodecTest"
org.apache.commons.codec.binary.Base32Test.testRandomBytesHex,"StringBuilder, Random, Base32TestData, Base32, Base32Test, BaseNCodec"
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData,"Md5Crypt, Md5CryptTest"
org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream,"HmacUtils, String, HmacUtilsTest, ByteArrayInputStream, Mac, Hex"
org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput,"StringUtils, StringUtilsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt,"CryptTest, Crypt"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM,"BeiderMorseEncoderTest, String, BeiderMorseEncoder"
org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition,
org.apache.commons.codec.language.NysiisTest.testBran,"StringBuilder, NysiisTest, Nysiis"
org.apache.commons.codec.binary.HexTest.testCustomCharset,"StringBuilder, SortedMap, String, Charset, HexTest, Arrays, Set, Iterator, Hex"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex,"Soundex, StringEncoderComparator, StringEncoderComparatorTest"
org.apache.commons.codec.language.NysiisTest.testTranan,"StringBuilder, NysiisTest, Nysiis"
org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation,"Metaphone, MetaphoneTest"
org.apache.commons.codec.binary.Base64Test.testStringToByteVariations,"String, Arrays, Base64, StringUtils, Base64Test, Hex"
org.apache.commons.codec.digest.UnixCryptTest.testCtor,"UnixCrypt, UnixCryptTest"
org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize,"InputStream, Base64InputStreamTest, Arrays, System, Base64InputStream, Base64TestData, ByteArrayInputStream"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator,"StringUtils, Base64Test, String, Base64"
org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull,"QCodecTest, QCodec"
org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail,"HmacUtils, HmacUtilsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt,"UnixCrypt, UnixCryptTest"
org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull,"URLCodec, URLCodecTest"
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData,"Md5Crypt, Apr1CryptTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray,"String, HmacUtils, HmacUtilsTest, Mac, Hex"
org.apache.commons.codec.net.QCodecTest.testInvalidEncoding,"QCodecTest, QCodec"
org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero,"StringBuilder, Rule$Phoneme, Comparator, RuleTest"
org.apache.commons.codec.language.SoundexTest.testEncodeBasic,"Soundex, SoundexTest"
org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked,"Base64Test, String, Base64"
org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom,"String, Arrays, HexTest, StringUtils, Random, Hex"
org.apache.commons.codec.CharsetsTest.testUsAscii,"Charset, CharsetsTest"
org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone,"StringUtils, Base32InputStreamTest, ByteArrayInputStream, Base32InputStream"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad,"BaseNCodecTest, String, BaseNCodec"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException,"Languages, BeiderMorseEncoderTest, Lang"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero,
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt,"UnixCrypt, UnixCryptTest"
org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString,"DigestUtilsTest, MessageDigest, DigestUtils, StringUtils, Hex"
org.apache.commons.codec.CharsetsTest.testIso8859_1,"Charset, CharsetsTest"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright,
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le,"String, Arrays, StringUtilsTest, StringUtils"
org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode,"StringUtils, Base64Test, Base64"
org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter,"Base64Test, Base64"
org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples,Caverphone1Test
org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex,"StringUtils, HexTest, String, Hex"
org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt,"Sha512CryptTest, String, Sha2Crypt"
org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5,"HexTest, Hex"
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii,"String, Arrays, StringUtilsTest, StringUtils"
org.apache.commons.codec.CharsetsTest.testUtf8,"Charset, CharsetsTest"
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples,Caverphone2Test
org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail,"HmacUtils, HmacUtilsTest"
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens,DaitchMokotoffSoundexTest
org.apache.commons.codec.DecoderExceptionTest.testConstructor0,"DecoderException, DecoderExceptionTest"
org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG,"Metaphone, MetaphoneTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd,"Base64InputStreamTest, StringUtils, ByteArrayInputStream, Base64InputStream"
org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid,
org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet,"String, QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.net.BCodecTest.testInvalidEncoding,"BCodec, BCodecTest"
org.apache.commons.codec.CharsetsTest.testUtf16Le,"Charset, CharsetsTest"
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130,"String, ByteArrayOutputStream, InputStream, Base64InputStreamTest, System, Base64OutputStream, Base64InputStream, Base64TestData, StringUtils, ByteArrayInputStream"
org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString,"BaseNCodecTest, BaseNCodec"
org.apache.commons.codec.language.NysiisTest.testSpecialBranches,"StringBuilder, NysiisTest, Nysiis"
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall,"UnixCrypt, UnixCryptTest, String"
org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding,"Arrays, Base32, Base32Test, BaseNCodec$Context"
org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis,"Soundex, Character, SoundexTest"
org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111,Caverphone1Test
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76,"String, Arrays, StringUtils, Base64Test, Base64"
org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull,"QCodecTest, QCodec"
org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty,"Arrays, HexTest, ByteBuffer, Hex"
org.apache.commons.codec.binary.Base64Test.testCodeInteger1,"Base64Test, String, BigInteger, Base64"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte,"String, ByteArrayOutputStream, Arrays, Base64OutputStreamTest, Base64OutputStream, Random, Base64TestData, OutputStream, StringUtils, Base64"
org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes,"StringUtils, DigestUtils, DigestUtilsTest"
org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty,"Arrays, HexTest, ByteBuffer, Hex"
org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds,"Sha512CryptTest, String, Sha2Crypt"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.QCodecTest.testEncodeObjects,"QCodecTest, Double, QCodec"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111,Caverphone2Test
org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC,"NameType, Languages$LanguageSet, String, Map, RuleType, Arrays, PhoneticEngine, TreeMap, HashSet, PhoneticEngineRegressionTest"
org.apache.commons.codec.digest.B64Test.testB64from24bit,"StringBuilder, B64Test, B64"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName,"HexTest, Hex"
org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull,"BinaryCodec, BinaryCodecTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16,"String, Arrays, StringUtilsTest, StringUtils"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer,"StringUtils, DigestUtils, DigestUtilsTest"
org.apache.commons.codec.binary.StringUtilsTest.testConstructor,"StringUtils, StringUtilsTest"
org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode,"URLCodec, URLCodecTest"
org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty,"DoubleMetaphoneTest, DoubleMetaphone"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan,
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals,"Caverphone2Test, Caverphone2"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck,"BeiderMorseEncoderTest, StringBuilder, BeiderMorseEncoder"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.MetaphoneTest.testExceedLength,"Metaphone, MetaphoneTest"
org.apache.commons.codec.binary.Base64Test.testTripletsChunked,"Base64Test, String, Base64"
org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty,"Arrays, HexTest, ByteBuffer, Hex"
org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString,"BinaryCodec, String, BinaryCodecTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable,"SoundexUtils, SoundexTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported,"StringUtils, Base32InputStreamTest, ByteArrayInputStream, Base32InputStream"
org.apache.commons.codec.language.NysiisTest.testSnat,"StringBuilder, NysiisTest, Nysiis"
org.apache.commons.codec.binary.Base64Test.testCodeInteger2,"Base64Test, String, BigInteger, Base64"
org.apache.commons.codec.digest.Md5CryptTest.testCtor,"Md5Crypt, Md5CryptTest"
org.apache.commons.codec.digest.B64Test.testB64T,"B64Test, String, B64"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd,"StringUtils, Base32InputStreamTest, ByteArrayInputStream, Base32InputStream"
org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray,"URLCodec, URLCodecTest"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage,"Base32OutputStreamTest, ByteArrayOutputStream, Base32OutputStream"
org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty,"Arrays, HexTest, Hex"
org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize,"StringBuilder, Base64Test, Class, Base64"
org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder,"StringBuilder, String, Arrays, Base64Codec13Test, BinaryEncoder, Base64"
org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable,"EncoderException, EncoderExceptionTest"
org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1,"HexTest, Hex"
org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY,"Metaphone, MetaphoneTest"
org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0,"HexTest, Hex"
org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105,"Base32InputStreamTest, InputStream, Base32InputStream, Codec105ErrorInputStream"
org.apache.commons.codec.binary.Base64Test.testCodec68,"Base64Test, Base64"
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput,"StringUtils, StringUtilsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull,"Base64InputStreamTest, StringUtils, ByteArrayInputStream, Base64InputStream"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode,"URLCodec, URLCodecTest"
org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk,"InputStream, Arrays, Base32TestData, Base32, System, Base32InputStream, BaseNCodec, Random, Base32InputStreamTest, StringUtils, ByteArrayInputStream"
org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe,ColognePhoneticTest
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis,
org.apache.commons.codec.binary.Base64Test.testCodeInteger3,"Base64Test, String, BigInteger, Base64"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary,
org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip,"QCodecTest, StringBuilder, QCodec"
org.apache.commons.codec.binary.Base32Test.testRandomBytes,"StringBuilder, Random, Base32TestData, Base32, Base32Test, BaseNCodec"
org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty,"Arrays, HexTest, Hex"
org.apache.commons.codec.language.NysiisTest.testCap,"StringBuilder, NysiisTest, Nysiis"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.CharEncodingTest.testUsAscii,
org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte,"InputStream, Arrays, Base32TestData, Base32, Base32InputStream, BaseNCodec, Random, Base32InputStreamTest, StringUtils, ByteArrayInputStream"
org.apache.commons.codec.language.SoundexTest.testHWRuleEx2,"Soundex, SoundexTest"
org.apache.commons.codec.net.QCodecTest.testDecodeObjects,"QCodecTest, Double, QCodec"
org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8,"StringUtilsTest, String, StringUtils"
org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA,"Metaphone, MetaphoneTest"
org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds,"Base64OutputStreamTest, ByteArrayOutputStream, Base64OutputStream"
org.apache.commons.codec.language.Caverphone2Test.testEndMb,Caverphone2Test
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended1,
org.apache.commons.codec.digest.DigestUtilsTest.testSha224,"SystemUtils, DigestUtils, Assume, DigestUtilsTest"
org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be,"StringUtilsTest, String, StringUtils"
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings,"Md5CryptTest, Crypt"
org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate,"DoubleMetaphone2Test, DoubleMetaphone, StringBuilder"
org.apache.commons.codec.EncoderExceptionTest.testConstructorString,"EncoderException, EncoderExceptionTest"
org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty,"Arrays, HexTest, Hex"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode,"QCodecTest, QCodec"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException,"StringUtils, HmacUtilsTest, HmacUtils"
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt,"Apr1CryptTest, String, Md5Crypt"
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111,Caverphone2Test
org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX,"Metaphone, MetaphoneTest"
org.apache.commons.codec.language.SoundexTest.testHWRuleEx3,"Soundex, SoundexTest"
org.apache.commons.codec.CharEncodingTest.testUtf16Le,
org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean,"BaseNCodecTest, BaseNCodec"
org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes,"BinaryCodec, String, BinaryCodecTest"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname,"BeiderMorseEncoderTest, BeiderMorseEncoder"
org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported,"Base64InputStreamTest, StringUtils, ByteArrayInputStream, Base64InputStream"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes,"Sha512CryptTest, String, Crypt"
org.apache.commons.codec.digest.DigestUtilsTest.testSha384,"ByteBuffer, DigestUtilsTest, DigestUtils, StringUtils, ByteArrayInputStream"
org.apache.commons.codec.language.NysiisTest.testDropBy,
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters,"BeiderMorseEncoderTest, String, BeiderMorseEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk,"Base32OutputStreamTest, ByteArrayOutputStream, Arrays, Base32TestData, Base32, BaseNCodec, Base32OutputStream, Random, OutputStream, StringUtils"
org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings,"Sha256CryptTest, Crypt"
org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion,"NameType, Languages$LanguageSet, String, Map, RuleType, Arrays, PhoneticEngine, TreeMap, HashSet, PhoneticEngineRegressionTest"
org.apache.commons.codec.binary.Base32Test.testBase32Samples,"Base32, Base32Test, String"
org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode,"StringUtils, Base64Test, Base64"
org.apache.commons.codec.binary.Base64Test.testEmptyBase64,"Base64Test, Base64"
org.apache.commons.codec.language.SoundexTest.testHWRuleEx1,"Soundex, SoundexTest"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars,"BeiderMorseEncoderTest, Character, BeiderMorseEncoder"
org.apache.commons.codec.binary.Base64Test.testCodeInteger4,"Base64Test, String, BigInteger, Base64"
org.apache.commons.codec.binary.Base64InputStreamTest.testRead0,"Base64InputStreamTest, StringUtils, ByteArrayInputStream, Base64InputStream"
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData,"UnixCrypt, UnixCryptTest"
org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom,"Arrays, Random, Base64Test, Base64"
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2,"DoubleMetaphoneTest, StringBuilder, DoubleMetaphone"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64Test.testIsUrlSafe,"Base64Test, Base64"
org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex,"DigestUtils, ByteArrayInputStream, DigestUtilsTest, ByteBuffer"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull,"BCodec, BCodecTest"
org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize,"InputStream, Arrays, Base32TestData, System, Base32InputStream, Base32InputStreamTest, ByteArrayInputStream"
org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd,"StringUtils, Base32InputStreamTest, ByteArrayInputStream, Base32InputStream"
org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty,"Arrays, HexTest, Hex"
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3,"StringBuilder, DoubleMetaphoneTest, DoubleMetaphone, System"
org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer,ColognePhoneticTest
org.apache.commons.codec.binary.Base64Test.testDecodePadOnly,"Base64Test, String, Base64"
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes,"DaitchMokotoffSoundexTest, DaitchMokotoffSoundex"
org.apache.commons.codec.language.SoundexTest.testB650,SoundexTest
org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable,"DecoderException, Object, Class, DecoderExceptionTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64Test.testPairs,"Arrays, Base64Test, String, Base64"
org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases,ColognePhoneticTest
org.apache.commons.codec.language.NysiisTest.testSnad,"StringBuilder, NysiisTest, Nysiis"
org.apache.commons.codec.CharEncodingTest.testIso8859_1,
org.apache.commons.codec.binary.Base64Test.testKnownEncodings,"Base64Test, String, Base64"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter,"BeiderMorseEncoderTest, String, Character, BeiderMorseEncoder"
org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode,"QCodecTest, QCodec"
org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt,"Md5Crypt, Apr1CryptTest"
org.apache.commons.codec.digest.CryptTest.testCrypt,"CryptTest, Crypt"
org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode,"Base64Codec13Test, StringBuilder, String, Arrays, Base64"
org.apache.commons.codec.CharsetsTest.testToCharset,"Charset, CharsetsTest, Charsets"
org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest,"DoubleMetaphoneTest, DoubleMetaphone"
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105,"InputStream, Base64InputStreamTest, Codec105ErrorInputStream, Base64InputStream"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData,"Sha512CryptTest, Sha2Crypt"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac,"ByteArrayInputStream, HmacUtils, HmacUtilsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars,"BinaryCodec, String, BinaryCodecTest"
org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty,"Arrays, HexTest, Hex"
org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull,"StringUtils, Base32InputStreamTest, ByteArrayInputStream, Base32InputStream"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111,Caverphone2Test
org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes,"StringUtils, DigestUtils, String, DigestUtilsTest"
org.apache.commons.codec.binary.Base32InputStreamTest.testRead0,"StringUtils, Base32InputStreamTest, ByteArrayInputStream, Base32InputStream"
org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds,"Base64InputStreamTest, StringUtils, ByteArrayInputStream, Base64InputStream"
org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe,"StringUtils, Base64Test, String, Base64"
org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte,"BaseNCodecTest$2, BaseNCodecTest, BaseNCodec"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects,"Double, String, QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes,DaitchMokotoffSoundexTest
org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked,"StringBuilder, Random, Base32TestData, Base32, Base32Test, BaseNCodec"
org.apache.commons.codec.binary.Base64Test.testBase64,"StringUtils, Base64Test, Base64"
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName,"StringUtils, StringBuilder, StringUtilsTest, Class"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException,"BeiderMorseEncoderTest, BeiderMorseEncoder"
org.apache.commons.codec.binary.HexTest.testGetCharset,"HexTest, Hex"
org.apache.commons.codec.EncoderExceptionTest.testConstructor0,"EncoderException, EncoderExceptionTest"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk,"String, InputStream, Base64InputStreamTest, Arrays, System, Base64InputStream, Base64TestData, StringUtils, Random, ByteArrayInputStream, Base64"
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES,"StringBuilder, DoubleMetaphone, DoubleMetaphoneTest"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2,
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException,"BeiderMorseEncoderTest, Rule$Phoneme, Rule"
org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode,"BCodec, BCodecTest"
org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString,"BinaryCodec, BinaryCodecTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.HmacUtilsTest.testConstructor,"HmacUtils, HmacUtilsTest"
org.apache.commons.codec.net.BCodecTest.testEncodeObjects,"BCodec, BCodecTest, Double"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail,"HmacUtils, HmacUtilsTest"
org.apache.commons.codec.binary.Base64Test.testCodeIntegerEdgeCases,
org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall,"StringBuilder, String, Arrays, Random, Base64Test, Base64"
org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty,"Arrays, HexTest, Hex"
org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals,"Caverphone1, Caverphone1Test"
org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip,"StringBuilder, BCodec, BCodecTest"
org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty,"Arrays, HexTest, ByteBuffer, Hex"
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE,"InputStream, Base64InputStreamTest, System, Base64InputStream, Base64TestData, StringUtils, ByteArrayInputStream"
org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize,"OutputStream, Base32OutputStreamTest, ByteArrayOutputStream, Arrays, Base32OutputStream"
org.apache.commons.codec.language.NysiisTest.testOthers,
org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray,"BinaryCodec, String, BinaryCodecTest"
org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked,"Base64Codec13Test, StringBuilder, String, Arrays, Base64"
org.apache.commons.codec.binary.Base64Test.testUUID,"String, Arrays, Base64, StringUtils, Base64Test, Hex"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130,"String, ByteArrayOutputStream, InputStream, Base32TestData, System, Base32InputStream, Base32OutputStream, Base32InputStreamTest, StringUtils, ByteArrayInputStream"
org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey,"HmacUtils, HmacUtilsTest"
org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN,"Metaphone, MetaphoneTest"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1,
org.apache.commons.codec.binary.Base64Codec13Test.testDecoder,"StringBuilder, String, Decoder, Arrays, Base64Codec13Test, Base64"
org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader,"BufferedReader, Base64InputStreamTest, Base64InputStream, StringUtils, InputStreamReader, ByteArrayInputStream"
org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter,"RefinedSoundex, RefinedSoundexTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt,"Sha512CryptTest, String, Sha2Crypt"
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt,"UnixCrypt, UnixCryptTest"
org.apache.commons.codec.net.BCodecTest.testNullInput,"BCodec, BCodecTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.CharEncodingTest.testUtf8,
org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument,"StringUtils, Base32InputStreamTest, ByteArrayInputStream, Base32InputStream"
org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone,
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte,"String, InputStream, Base64InputStreamTest, Arrays, Base64InputStream, Random, Base64TestData, StringUtils, ByteArrayInputStream, Base64"
org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2,"RefinedSoundex, String, RefinedSoundexTest"
org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull,"BCodec, BCodecTest"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects,"Double, String, QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.NysiisTest.testRule4Dot1,
org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject,"BinaryCodec, String, BinaryCodecTest"
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2,"DaitchMokotoffSoundexTest, DaitchMokotoffSoundex"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall,"Sha512CryptTest, String, Sha2Crypt"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail,"HmacUtils, HmacUtilsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace,"BaseNCodecTest, BaseNCodec"
org.apache.commons.codec.language.SoundexTest.testMsSqlServer3,"Soundex, SoundexTest"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall,"Md5Crypt, Apr1CryptTest, String"
org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter,"Integer, Base64Test, Base64"
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable,"DaitchMokotoffSoundexTest, DaitchMokotoffSoundex"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.BCodecTest.testDecodeObjects,"BCodec, BCodecTest, Double"
org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac,"ByteArrayInputStream, HmacUtils, HmacUtilsTest"
org.apache.commons.codec.language.SoundexTest.testMsSqlServer2,SoundexTest
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.HmacUtilsTest.testNullKey,"HmacUtils, HmacUtilsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding,"Base32, Base32Test, String"
org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec,
org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters,"HexTest, ByteBuffer, Hex"
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3,"DaitchMokotoffSoundexTest, DaitchMokotoffSoundex"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight,
org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk,"String, ByteArrayOutputStream, Arrays, Base64OutputStreamTest, Base64OutputStream, Random, Base64TestData, OutputStream, StringUtils, Base64"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding,"DaitchMokotoffSoundexTest, DaitchMokotoffSoundex"
org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3,"RefinedSoundex, RefinedSoundexTest"
org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize,"OutputStream, Base32OutputStreamTest, ByteArrayOutputStream, Arrays, Base32OutputStream"
org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute,"Soundex, Character, SoundexTest"
org.apache.commons.codec.binary.Base64Test.testUrlSafe,"StringBuilder, Arrays, Base64TestData, Random, Base64Test, Base64"
org.apache.commons.codec.language.NysiisTest.testRule4Dot2,
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings,"Sha512CryptTest, Crypt"
org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic,"Soundex, SoundexTest"
org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122,ColognePhoneticTest
org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac,"ByteArrayInputStream, HmacUtils, HmacUtilsTest"
org.apache.commons.codec.CharEncodingTest.testUtf16Be,
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode,"URLCodec, URLCodecTest"
org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2,"Base64Test, String, Base64"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii,"StringUtilsTest, String, StringUtils"
org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE,"ByteArrayOutputStream, Base64OutputStreamTest, System, Base64OutputStream, StringUtils"
org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex,"DigestUtils, ByteArrayInputStream, DigestUtilsTest, ByteBuffer"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf,"StringUtils, StringBuilder, Base64Test, Base64"
org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength,"DoubleMetaphone, DoubleMetaphoneTest"
org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le,"StringUtilsTest, String, StringUtils"
org.apache.commons.codec.binary.Base64Test.testCodec112,"Base64Test, Base64"
org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize,"ByteArrayOutputStream, OutputStream, Arrays, Base64OutputStreamTest, Base64OutputStream"
org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall,"String, Sha256CryptTest, Sha2Crypt"
org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI,"NameType, Languages$LanguageSet, String, Map, RuleType, Arrays, PhoneticEngine, TreeMap, HashSet, PhoneticEngineRegressionTest"
org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3,"Base64Test, String, Base64"
org.apache.commons.codec.language.SoundexTest.testMsSqlServer1,"Soundex, SoundexTest"
org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples,Caverphone1Test
org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace,"StringBuilder, Base64Test, String, Base64"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip,"StringBuilder, QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic,"DaitchMokotoffSoundexTest, DaitchMokotoffSoundex"
org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes,"String, Sha256CryptTest, Crypt"
org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals,"ColognePhoneticTest, ColognePhonetic"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat,"BeiderMorseEncoderTest, BeiderMorseEncoder"
org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput,"Double, StringEncoderComparatorTest, DoubleMetaphone, StringEncoderComparator, Long"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite,
org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked,"Base64Codec13Test, StringBuilder, String, Arrays, Base64"
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101,"StringBuilder, Base64InputStreamTest, Base64InputStream, StringUtils, ByteArrayInputStream"
org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable,"Base64InputStreamTest, StringUtils, ByteArrayInputStream, Base64InputStream"
org.apache.commons.codec.language.MetaphoneTest.testWhy,"Metaphone, MetaphoneTest"
org.apache.commons.codec.language.SoundexTest.testDifference,"Soundex, SoundexTest"
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic,"DoubleMetaphoneTest, StringBuilder, DoubleMetaphone"
org.apache.commons.codec.language.NysiisTest.testRule5,
org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode,"Base64Test, String, Base64"
org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples,Caverphone2Test
org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte,"Base32OutputStreamTest, ByteArrayOutputStream, Arrays, Base32TestData, Base32, BaseNCodec, Base32OutputStream, Random, OutputStream, StringUtils"
org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig,"Base64InputStreamTest, StringUtils, ByteArrayInputStream, Base64InputStream"
org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize,"Arrays, Sha256CryptTest, Sha2Crypt"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone,"StringBuilder, Collections, Arrays, StringEncoderComparatorTest, DoubleMetaphone, StringEncoderComparator, List"
org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer,"StringUtils, DigestUtils, String, DigestUtilsTest"
org.apache.commons.codec.binary.Base64Test.testObjectEncode,"Base64Test, String, Base64"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3,"BeiderMorseEncoderTest, String, BeiderMorseEncoder"
org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative,"StringBuilder, BaseMatcher, RuleTest$NegativeIntegerBaseMatcher, Rule$Phoneme, Comparator, RuleTest, Integer, Description"
org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac,"ByteArrayInputStream, HmacUtils, HmacUtilsTest"
org.apache.commons.codec.binary.Base32Test.testBase32Chunked,"Base32, Base32Test, String"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens,SoundexTest
org.apache.commons.codec.digest.DigestUtilsTest.testSha512,"ByteBuffer, DigestUtilsTest, DigestUtils, StringUtils, ByteArrayInputStream"
org.apache.commons.codec.binary.Base64Codec13Test.testEncoder,"StringBuilder, String, Arrays, Encoder, Base64Codec13Test, Base64"
org.apache.commons.codec.net.URLCodecTest.testEncodeNull,"URLCodec, URLCodecTest"
org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant,"String, CryptTest, Crypt"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2,"BeiderMorseEncoderTest, String, BeiderMorseEncoder"
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic,"DaitchMokotoffSoundexTest, DaitchMokotoffSoundex"
org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray,"BinaryCodec, String, BinaryCodecTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet,"URLCodec, String, URLCodecTest"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn,
org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary,"DoubleMetaphone2Test, DoubleMetaphone, StringBuilder"
org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy,"QCodecTest, QCodec"
org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid,"URLCodec, URLCodecTest"
org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo,"HmacUtils, HmacUtilsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex,"StringUtils, HexTest, String, Hex"
org.apache.commons.codec.binary.HexTest.testDecodeClassCastException,"HexTest, Hex"
org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys,"HmacUtilsTest, SecretKeySpec"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.NysiisTest.testFal,"StringBuilder, NysiisTest, Nysiis"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.SoundexTest.testEncodeBatch4,"Soundex, SoundexTest"
org.apache.commons.codec.language.NysiisTest.testRule6,
org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray,"String, DigestUtilsTest, MessageDigest, DigestUtils, Hex"
org.apache.commons.codec.language.NysiisTest.testDan,"StringBuilder, NysiisTest, Nysiis"
org.apache.commons.codec.language.ColognePhoneticTest.testExamples,ColognePhoneticTest
org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds,"StringUtils, Base32InputStreamTest, ByteArrayInputStream, Base32InputStream"
org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding,"URLCodec, URLCodecTest"
org.apache.commons.codec.binary.Base64Test.testConstructors,"Base64Test, Base64"
org.apache.commons.codec.language.MetaphoneTest.testTCH,"Metaphone, MetaphoneTest"
org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing,"StringBuilder, Languages$LanguageSet, LanguageGuessingTest, Lang"
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings,"Md5Crypt, Apr1CryptTest"
org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize,"InputStream, Arrays, Base32TestData, System, Base32InputStream, Base32InputStreamTest, ByteArrayInputStream"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize,"ByteArrayOutputStream, OutputStream, Arrays, Base64OutputStreamTest, Base64OutputStream"
org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull,"URLCodec, URLCodecTest"
org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters,"HexTest, Hex"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException,"BinaryCodec, BinaryCodecTest"
org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray,"String, DigestUtilsTest, MessageDigest, DigestUtils, Hex"
org.apache.commons.codec.net.URLCodecTest.testDecodeObjects,"URLCodec, Double, String, URLCodecTest"
org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition,"Arrays, Base64Test"
org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString,"DigestUtilsTest, MessageDigest, DigestUtils, StringUtils, Hex"
org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB,"Metaphone, MetaphoneTest"
org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter,"Base64Test, String, Base64"
org.apache.commons.codec.language.SoundexTest.testBadCharacters,"Soundex, SoundexTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.CharEncodingTest.testConstructor,"CharEncoding, CharEncodingTest"
org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla,"DoubleMetaphoneTest, DoubleMetaphone"
org.apache.commons.codec.language.NysiisTest.testTrueVariant,"NysiisTest, String, Nysiis"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig,"StringUtils, Base32InputStreamTest, ByteArrayInputStream, Base32InputStream"
org.apache.commons.codec.language.NysiisTest.testRule7,
org.apache.commons.codec.binary.HexTest.testRequiredCharset,"StringBuilder, SortedMap, String, Charset, HexTest, Arrays, Set, Iterator, Hex"
org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance,"RefinedSoundex, RefinedSoundexTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty,"Arrays, HexTest, ByteBuffer, Hex"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.ColognePhoneticTest.testAaclan,ColognePhoneticTest
org.apache.commons.codec.CharsetsTest.testUtf16Be,"Charset, CharsetsTest"
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords,Caverphone2Test
org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX,"Metaphone, MetaphoneTest"
org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength,"StringUtils, DigestUtils, String, DigestUtilsTest"
org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC,"NameType, Languages$LanguageSet, String, Map, RuleType, Arrays, PhoneticEngine, TreeMap, HashSet, PhoneticEngineRegressionTest"
org.apache.commons.codec.language.MetaphoneTest.testMetaphone,"Metaphone, MetaphoneTest"
org.apache.commons.codec.digest.DigestUtilsTest.testShaHex,"StringUtils, DigestUtils, ByteArrayInputStream, DigestUtilsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte,"BaseNCodecTest, BaseNCodec"
org.apache.commons.codec.language.MetaphoneTest.testPHTOF,"Metaphone, MetaphoneTest"
org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex,"ByteArrayInputStream, HmacUtils, HmacUtilsTest, String"
org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes,"HexTest, String, Hex"
org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac,"ByteArrayInputStream, HmacUtils, HmacUtilsTest"
org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip,"URLCodec, StringBuilder, URLCodecTest"
org.apache.commons.codec.binary.Base32Test.testCodec200,"Base32, Base32Test"
org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable,"Soundex, SoundexTest"
org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty,"Arrays, HexTest, Hex"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert,
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone,"Base64InputStreamTest, StringUtils, ByteArrayInputStream, Base64InputStream"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode,"StringUtils, Base64Test, Base64"
org.apache.commons.codec.net.RFC1522CodecTest.testNullInput,"RFC1522Codec, RFC1522CodecTest, RFC1522CodecTest$RFC1522TestCodec"
org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray,"BinaryCodec, String, BinaryCodecTest"
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be,"String, Arrays, StringUtilsTest, StringUtils"
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings,"UnixCryptTest, Crypt"
org.apache.commons.codec.binary.Base64Test.testSingletons,"Arrays, Base64Test, String, Base64"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString,"Mac, HmacUtils, HmacUtilsTest, Hex"
org.apache.commons.codec.binary.Base64Test.testTriplets,"Base64Test, String, Base64"
org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds,"String, Sha256CryptTest, Sha2Crypt"
org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex,"StringUtils, HexTest, String, Hex"
org.apache.commons.codec.net.UtilsTest.testConstructor,"Utils, UtilsTest"
org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty,"Arrays, HexTest, Hex"
org.apache.commons.codec.language.NysiisTest.testRule2,
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual,"DoubleMetaphoneTest, DoubleMetaphone"
org.apache.commons.codec.binary.Base64Test.testNonBase64Test,"Base64Test, Base64"
org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks,"QCodecTest, QCodec"
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna,"BeiderMorseEncoderTest, BeiderMorseEncoder"
org.apache.commons.codec.binary.HexTest.testCustomCharsetToString,"HexTest, String, Hex"
org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent,"StringBuilder, String, URLCodecTest, URLCodec"
org.apache.commons.codec.language.RefinedSoundexTest.testDifference,"RefinedSoundex, RefinedSoundexTest"
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay,
org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer,"String, ByteBuffer, DigestUtilsTest, MessageDigest, DigestUtils, Hex"
org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull,"QCodecTest, QCodec"
org.apache.commons.codec.language.SoundexTest.testEncodeBatch2,"Soundex, SoundexTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode,"QuotedPrintableCodec, QuotedPrintableCodecTest"
org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize,"Arrays, Sha512CryptTest, Sha2Crypt"
org.apache.commons.codec.digest.CryptTest.testCryptWithBytes,"CryptTest, Crypt"
org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length,"StringUtils, DigestUtils, DigestUtilsTest"
org.apache.commons.codec.language.ColognePhoneticTest.testHyphen,ColognePhoneticTest
org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad,"Arrays, StringUtils, Base64Test, Base64"
org.apache.commons.codec.binary.Base64Test.testSingletonsChunked,"Base64Test, String, Base64"
org.apache.commons.codec.language.RefinedSoundexTest.testEncode,"RefinedSoundex, RefinedSoundexTest"
org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH,"Metaphone, MetaphoneTest"
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111,Caverphone2Test
org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail,"HmacUtils, HmacUtilsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8,"String, Arrays, StringUtilsTest, StringUtils"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes,"UnixCryptTest, String, Crypt"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64Test.testByteToStringVariations,"String, Base64, StringUtils, Base64Test, Hex"
org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64,"Base64Test, Base64"
org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac,"Mac, HmacUtils, HmacUtilsTest"
org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour,"SoundexUtils, SoundexTest"
org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable,"StringUtils, Base32InputStreamTest, ByteArrayInputStream, Base32InputStream"
org.apache.commons.codec.binary.Base32Test.testBase32HexSamples,"Base32, Base32Test, String"
org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable,"Object, EncoderException, EncoderExceptionTest, Class"
org.apache.commons.codec.CharsetsTest.testUtf16,"Charset, CharsetsTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull,"Base64Test, Base64"
org.apache.commons.codec.net.URLCodecTest.testEncodeObjects,"URLCodec, Double, String, URLCodecTest"
org.apache.commons.codec.language.SoundexTest.testEncodeBatch3,"Soundex, SoundexTest"
org.apache.commons.codec.language.NysiisTest.testRule1,
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact,"BeiderMorseEncoderTest, BeiderMorseEncoder"
org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray,"BinaryCodec, String, BinaryCodecTest"
org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding,"URLCodec, URLCodecTest"
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH,"MatchRatingApproachEncoderTest, MatchRatingApproachEncoder"
org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde,"DoubleMetaphoneTest, DoubleMetaphone"
org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc,"StringUtils, StringBuilder, StringUtilsTest, Class"
org.apache.commons.codec.binary.HexTest.testGetCharsetName,"Charset, HexTest, Hex"
org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument,"Base64InputStreamTest, StringUtils, ByteArrayInputStream, Base64InputStream"
