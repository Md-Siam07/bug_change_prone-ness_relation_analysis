Method,Used Classes
com.fasterxml.jackson.dataformat.xml.ser.TestIndentation.testSimpleMap,"Map, XmlMapper, StringBuilder, TestIndentation, String, HashMap"
com.fasterxml.jackson.dataformat.xml.jaxb.AttributesWithJAXBTest.testTwoAttributes,"AttributesWithJAXBTest, Object, JaxbAnnotationIntrospector, XmlMapper, AttributesWithJAXBTest$Jurisdiction, TypeFactory"
com.fasterxml.jackson.dataformat.xml.deser.EmptyStringValueTest.testEmptyElement,"EmptyStringValueTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.ser.TestSerialization.testCustomSerializer,"JsonGenerator, XmlMapper, TestSerialization, StdScalarSerializer, StringBuilder, TestSerialization$CustomSerializer, JacksonXmlModule"
com.fasterxml.jackson.dataformat.xml.lists.ListAsObjectTest.testCollection,"Object, ListAsObjectTest, XmlMapper, ListAsObjectTest$Values, List, LinkedList, ListAsObjectTest$Value, ArrayList"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testSecondLevelAttribute,"XmlFactory, StringWriter, XmlGeneratorTest, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest.testSimplest,"XmlFactory, JsonFactory, XmlParserTest, JsonGenerator, StringWriter, JsonParser"
com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListWithEmptyCData129Test.testListWithEmptyCData,"List, UnwrappedListWithEmptyCData129Test, XmlMapper, StringBuilder"
com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest.testWrappedListBeanDeser,"ListDeserializationTest, Integer, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.deser.builder.BuilderSimpleTest.testSelfBuilder777,"XmlMapper, BuilderSimpleTest"
com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest.testSimpleViaObjectReader,"ObjectMapper, XmlMapper, FormatDetectionTest, ObjectReader"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testAttrAndElem,"XmlFactory, StringWriter, XmlGeneratorTest, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.deser.builder.BuilderSimpleTest.testImmutable,"XmlMapper, BuilderSimpleTest"
com.fasterxml.jackson.dataformat.xml.jaxb.ElementWrapperTest.testElementWrapper,"Object, ArrayList, ElementWrapperTest, XmlMapper, JacksonAnnotationIntrospector, XmlJaxbAnnotationIntrospector, ElementWrapperTest$MyPerson, List, ObjectWriter, XmlAnnotationIntrospector$Pair, TypeFactory"
com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr.testIssue19,"String, Object, TestSerializationAttr$Issue19Bean, TestSerializationAttr, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.NullConversionsSkipTest.testSkipNullField2,"NullConversionsSkipTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.EmptyStringValueTest.testEmptyString162,"EmptyStringValueTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.misc.XmlTextTest.testMixedContent,"XmlTextTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.incr.IncrementalWritingTest.testSimple,"XmlFactory, Object, StringWriter, XmlMapper, String, XMLOutputFactory, XmlTestBase$NameBean, XMLStreamWriter, IncrementalWritingTest"
com.fasterxml.jackson.dataformat.xml.deser.TestViews.testNullSuppression,"TestViews$NonNullBean, Object, TestViews, XmlMapper"
com.fasterxml.jackson.dataformat.xml.misc.XmlTextTest.testSimple198,"Object, XmlTextTest$Phone, XmlTextTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest.testWrappedList,"Object, List, ListDeserializationTest, ListDeserializationTest$Person, ArrayList, XmlMapper"
com.fasterxml.jackson.dataformat.xml.lists.ListSerializationTest.testSimpleWrappedList,"Object, ListSerializationTest, XmlMapper, ListSerializationTest$ListBean, List, Integer, ArrayList"
com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest.testRoundTripWithSample,"XmlFactory, XmlMapper, JsonParser, ObjectMapper, String, XmlParserTest"
com.fasterxml.jackson.dataformat.xml.deser.builder.BuilderSimpleTest.testBuilderMethodReturnMoreSpecific,"BuilderSimpleTest$ValueInterface2, XmlMapper, BuilderSimpleTest"
com.fasterxml.jackson.dataformat.xml.lists.Issue101UnwrappedListAttributesTest.testWithTwoAttributes,"Object, Arrays, Issue101UnwrappedListAttributesTest$Root, Issue101UnwrappedListAttributesTest$UnwrappedElement, XmlMapper, Issue101UnwrappedListAttributesTest"
com.fasterxml.jackson.dataformat.xml.stream.XmlParserNextXxxTest.testXmlAttributesWithNextTextValue,"XmlFactory, StringReader, FromXmlParser, XmlParserNextXxxTest"
com.fasterxml.jackson.dataformat.xml.lists.DeserializePolyList178Test.testPolyIdList178,"Object, DeserializePolyList178Test$Computer, XmlMapper, DeserializePolyList178Test, DeserializePolyList178Test$Company, DeserializePolyList178Test$DesktopComputer, List, ObjectWriter, ArrayList"
com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest.testSimpleUnwrappingRoundtrip,"ObjectMapper, ObjectWriter, UnwrappingWithXMLTest, ObjectReader"
com.fasterxml.jackson.dataformat.xml.deser.SimpleStringValuesTest.testStringWithAttribute,"SimpleStringValuesTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.misc.RootNameTest.testRootNameAnnotation,"RootNameTest$NsRootBean, Object, RootNameTest$RootBean, XmlMapper, RootNameTest, XmlTestBase$StringBean, StringBuilder, String, RootNameTest$RootBeanBase"
com.fasterxml.jackson.dataformat.xml.deser.NullConversionsSkipTest.testSkipNullField1,"NullConversionsSkipTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest.testSerializeAsAttr,"WithJAXBAnnotationsTest, Object, WithJAXBAnnotationsTest$AttrBean, XmlMapper"
com.fasterxml.jackson.dataformat.xml.misc.TextValueTest.testDeserializeAsText,"TextValueTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.ser.TestIndentation.testMultiLevel172,"Object, TestIndentation$Company, XmlMapper, TestIndentation$Employee, TestIndentation, List, ObjectWriter, ArrayList"
com.fasterxml.jackson.dataformat.xml.deser.SimpleStringValuesTest.testStringsInList,"SimpleStringValuesTest, Object, XmlMapper, EmptyStringValueTest$Names, List, ObjectWriter, EmptyStringValueTest$Name, ArrayList"
com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest.testParentListRoundtrip,"ListRoundtripTest$Parent, Object, ListRoundtripTest, ArrayList, XmlMapper, List, ListRoundtripTest$Parents, ListRoundtripTest$Prop"
com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization.testMissingOptionalAttr,"TestDeserialization, XmlMapper"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testSimpleAttribute,"XmlFactory, StringWriter, XmlGeneratorTest, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.deser.SimpleStringValuesTest.testSimpleStringElement,"SimpleStringValuesTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest.testListSerialization,"Object, TypeFactory, XmlMapper, JacksonAnnotationIntrospector, Long, StringBuilder, String, List, JacksonXmlModule, RootListHandlingTest$SampleResource, ObjectWriter, RootListHandlingTest, ArrayList, ObjectReader"
com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization.testWith0Bytes,"ByteBuffer, Object, TestBinaryStreamToXMLSerialization, XmlMapper, TestBinaryStreamToXMLSerialization$TestPojo"
com.fasterxml.jackson.dataformat.xml.lists.Issue101UnwrappedListAttributesTest.testOptionalsWithMissingType,"Issue101UnwrappedListAttributesTest, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr.testIssue117AnySetterAttrs,"Object, Map, TestSerializationAttr, TreeMap, TestSerializationAttr$DynaBean, XmlMapper, HashMap"
com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest.testByteArrayFrom,"Double, IllegalArgumentException, Object, StringBuilder, ArrayConversionsTest, String, ObjectMapper, Class, Array, Number"
com.fasterxml.jackson.dataformat.xml.misc.NodeTest.testMixed,"XmlMapper, StringBuilder, NodeTest, ObjectMapper, PrintStream"
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStreamTest.testSimple,"FromXmlParser$Feature, XmlTokenStream, XMLInputFactory, XmlTokenStreamTest, StringReader, XMLStreamReader"
com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest.testRenamedRootItem,"Object, XmlMapper, Long, String, ObjectWriter, RootListHandlingTest, RootListHandlingTest$SampleResource"
com.fasterxml.jackson.dataformat.xml.lists.EmptyListDeserTest.testEmptyList,"EmptyListDeserTest, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.deser.SimpleStringValuesTest.testStringsWithAttribute,"SimpleStringValuesTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.builder.BuilderSimpleTest.testSimple,"Object, XmlMapper, BuilderSimpleTest"
com.fasterxml.jackson.dataformat.xml.deser.Issue274PropertyNameTest.testIssue274,"Issue274PropertyNameTest, ObjectMapper, XmlMapper"
com.fasterxml.jackson.dataformat.xml.misc.DTDSupportTest.testDTDAttempt,"DTDSupportTest, XmlMapper, StringBuilder"
com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest.testPersonAsXml,"Long, WithJAXBAnnotationsTest, Object, XmlMapper, WithJAXBAnnotationsTest$MyPerson"
com.fasterxml.jackson.dataformat.xml.misc.TextValueTest.testAlternateTextElementName,"TextValueTest, XmlMapper, JacksonXmlModule"
com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest.testIntArrayToX,"Double, IllegalArgumentException, Object, XmlMapper, StringBuilder, ArrayConversionsTest, ObjectMapper, Class, ArrayConversionsTest$1, Array, ArrayList, TypeReference, Number"
com.fasterxml.jackson.dataformat.xml.misc.TextValueTest.testIssue66,"TextValueTest, XmlMapper, JacksonXmlModule"
com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest.testListViaObjectReader,"Object, FormatDetectionTest$POJO, FormatDetectionTest$ListPOJO, XmlMapper, FormatDetectionTest, ObjectMapper, List, ArrayList, ObjectReader"
com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest.testSimpleNested,"XmlFactory, JsonFactory, XmlParserTest, JsonGenerator, StringWriter, JsonParser"
com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization.testFromAttribute,"TestDeserialization, XmlMapper"
com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr.testIssue6,"Object, TestSerializationAttr$Jurisdiction, TestSerializationAttr, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.SimpleStringValuesTest.testStringArrayWithAttribute,"SimpleStringValuesTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.ser.TestIndentation.testSimpleIntBean,"Object, TestIndentation$IntWrapperBean, XmlMapper, StringBuilder, TestIndentation, String, XmlTestBase$IntWrapper"
com.fasterxml.jackson.dataformat.xml.VersionInfoTest.testMapperVersions,"VersionInfoTest, XmlFactory, XmlMapper"
com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest.testSimpleValidRoot,"XmlFactory, ByteArrayInputStream, FormatDetectionTest, JsonParser, String, DataFormatMatcher, DataFormatDetector"
com.fasterxml.jackson.dataformat.xml.lists.ListSerializationTest.testStringList,"Object, ListSerializationTest, XmlMapper, ListSerializationTest$StringListBean, XmlTestBase$StringBean, StringBuilder, List, ArrayList"
com.fasterxml.jackson.dataformat.xml.misc.XmlTextTest.testXmlTextWithSuppressedValue,"Object, XmlTextTest$Data, XmlTextTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.ser.TestXmlDeclaration.testXml11Declaration,"Object, TestXmlDeclaration, XmlMapper, XmlTestBase$StringBean, StringBuilder"
com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization.testMapWithAttr,"TestDeserialization, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.NullConversionsGenericTest.testNullsToEmptyArrays,"NullConversionsGenericTest, XmlMapper, NullConversionsGenericTest$2, NullConversionsGenericTest$4, NullConversionsGenericTest$5, NullConversionsGenericTest$3, NullConversionsGenericTest$6, TypeReference"
com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization.testWith1Byte,"ByteBuffer, Object, TestBinaryStreamToXMLSerialization, XmlMapper, TestBinaryStreamToXMLSerialization$TestPojo"
com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest.testAsClassProperty,"Object, PolymorphicTypesTest$SubTypeWithClassProperty, PolymorphicTypesTest, XmlMapper, PolymorphicTypesTest$BaseTypeWithClassProperty"
com.fasterxml.jackson.dataformat.xml.ser.TestSerializationManual.testIssue54,"XmlFactory, Object, TestSerializationManual$Value, StringWriter, TestSerializationManual, XmlMapper, Iterator, String, QName, ArrayList, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest.testWrappedListWithAttribute,"XmlMapper, StringBuilder, List, ListDeserializationTest, Integer"
com.fasterxml.jackson.dataformat.xml.ser.TestSerialization.testMap,"TestSerialization$WrapperBean, Object, LinkedHashMap, XmlMapper, TestSerialization, TestSerialization$MapBean, Integer"
com.fasterxml.jackson.dataformat.xml.misc.RootNameTest.testDynamicRootName,"Object, RootNameTest, ObjectWriter, XmlMapper, XmlTestBase$StringBean, StringBuilder"
com.fasterxml.jackson.dataformat.xml.ser.TestSerialization.testSimpleNsElem,"TestSerialization, Object, TestSerialization$NsElemBean, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.NullConversionsSkipTest.testSkipNullMethod1,"NullConversionsSkipTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.ser.TestSerialization.testCDataString,"TestSerialization$CDataStringBean, TestSerialization, Object, XmlMapper"
com.fasterxml.jackson.dataformat.xml.ser.TestNamespaces.testRootNamespace,"Object, XmlMapper, StringBuilder, String, TestNamespaces$Person, TestNamespaces"
com.fasterxml.jackson.dataformat.xml.deser.TestEnums.testEnum,"TestEnums, Object, TestEnums$EnumBean, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.DeserErrorHandling236Test.testExceptionWrapping,"DeserErrorHandling236Test, XmlMapper, StringBuilder"
com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty2,"NestedUnwrappedListsTest, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.adapters.TestIssue47Attribute.testEmptyStringFromElemAndAttr,"TestIssue47Attribute, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest.testUnwrappingWithAttribute,"ObjectMapper, ObjectWriter, UnwrappingWithXMLTest, ObjectReader"
com.fasterxml.jackson.dataformat.xml.ser.TestSerialization.testSimpleAttribute,"TestSerialization, Object, XmlMapper, TestSerialization$AttributeBean"
com.fasterxml.jackson.dataformat.xml.lists.ListDeser191Test.testListDeser,"ArrayList, ListDeser191Test, ObjectMapper, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.NullConversionsSkipTest.testSkipNullMethod2,"NullConversionsSkipTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest.testOptionals,"XmlMapper, List, ListRoundtripTest"
com.fasterxml.jackson.dataformat.xml.deser.SimpleStringValuesTest.testEmptyElementToString,"SimpleStringValuesTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.ser.TestJDKSerializability.testMapper,"ClassNotFoundException, Object, TestJDKSerializability, TestJDKSerializability$MyPojo, XmlMapper, ByteArrayInputStream, StringBuilder, ObjectOutputStream, ByteArrayOutputStream, ObjectInputStream"
com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest.testLongArrayToX,"Double, IllegalArgumentException, Object, XmlMapper, StringBuilder, ArrayConversionsTest$2, ArrayConversionsTest, ObjectMapper, Class, Array, ArrayList, TypeReference, Number"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testRawSimpleValue,"XmlFactory, StringWriter, XmlGeneratorTest, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.ser.TestXmlDeclaration.testXml10Declaration,"Object, TestXmlDeclaration, XmlMapper, XmlTestBase$StringBean, StringBuilder"
com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest.testWrappedLists,"UnwrappedListsTest$WrappedList, Object, UnwrappedListsTest, UnwrappedListsTest$Value, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.builder.BuilderSimpleTest.testBuilderMethodReturnMoreGeneral,"BuilderSimpleTest$ValueInterface, XmlMapper, BuilderSimpleTest"
com.fasterxml.jackson.dataformat.xml.deser.builder.BuilderSimpleTest.testCustomWith,"XmlMapper, BuilderSimpleTest"
com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest.testNullXform,"ArrayConversionsTest, ObjectMapper"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testSimpleElement,"XmlFactory, StringWriter, XmlGeneratorTest, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.deser.builder.BuilderSimpleTest.testMultiAccess,"XmlMapper, BuilderSimpleTest"
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStreamTest.testNested,"FromXmlParser$Feature, XmlTokenStream, XMLInputFactory, XmlTokenStreamTest, StringReader, XMLStreamReader"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testRawSimpleAttribute,"XmlFactory, StringWriter, XmlGeneratorTest, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest.testArraySerialization,"Object, XmlMapper, JacksonAnnotationIntrospector, Long, StringBuilder, String, JacksonXmlModule, ObjectWriter, RootListHandlingTest, RootListHandlingTest$SampleResource, ObjectReader"
com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest.testAsPropertyWithObjectId,"Object, PolymorphicTypesTest$TypeWithClassPropertyAndObjectId, XmlMapper, List, PolymorphicTypesTest, PolymorphicTypesTest$Wrapper, ArrayList"
com.fasterxml.jackson.dataformat.xml.deser.NullConversionsSkipTest.testSkipNullWithDefaults,"XmlMapper, ObjectMapper, NullConversionsSkipTest, JsonSetter$Value, MutableConfigOverride"
com.fasterxml.jackson.dataformat.xml.RoundtripContentTest.testRoundtrip,"MediaItem$Content, Object, XmlMapper, RoundtripContentTest, MediaItem$Photo, List, ObjectWriter, ArrayList, MediaItem, ObjectReader"
com.fasterxml.jackson.dataformat.xml.jaxb.AttributesWithJAXBTest.testAttributeAndElement,"AttributesWithJAXBTest$Problem, AttributesWithJAXBTest, Object, JaxbAnnotationIntrospector, XmlMapper, TypeFactory"
com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest.testUnwrappedListBeanDeser,"ListDeserializationTest, Integer, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testRawCharArrayValue,"XmlFactory, StringWriter, XmlGeneratorTest, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.incr.PartialReadTest.testSimpleRead,"PartialReadTest, XmlFactory, XmlMapper, XMLInputFactory, StringReader, XMLStreamReader"
com.fasterxml.jackson.dataformat.xml.jaxb.ElementWrapperTest.testNoElementWrapper,"Object, ArrayList, ElementWrapperTest, XmlMapper, XmlJaxbAnnotationIntrospector, List, ElementWrapperTest$MyPerson2, TypeFactory"
com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest.testListAsProperty,"ArrayConversionsTest, Object, List, ArrayConversionsTest$IntArrayWrapper, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.builder.BuilderSimpleTest.testSimpleWithIgnores,"Object, XmlMapper, BuilderSimpleTest, UnrecognizedPropertyException, ObjectMapper, MutableConfigOverride, JsonIgnoreProperties$Value"
com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest.testXmlAttributes,"XmlFactory, FromXmlParser, StringWriter, XmlParserTest, StringReader"
com.fasterxml.jackson.dataformat.xml.lists.WrappedListsTest.testEmptyList,"XmlMapper, Object, WrappedListsTest, WrappedListsTest$Order"
com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization.testOptionalAttr,"TestDeserialization, XmlMapper"
com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest.testSimpleValidDoctype,"XmlFactory, ByteArrayInputStream, FormatDetectionTest, JsonParser, String, DataFormatMatcher, DataFormatDetector"
com.fasterxml.jackson.dataformat.xml.deser.builder.BuilderSimpleTest.testPOJOConfigResolution1557,"BuilderSimpleTest$NopModule1557, XmlMapper, Version, BuilderSimpleTest, Module$SetupContext, Module, NopAnnotationIntrospector, BuilderSimpleTest$NopModule1557$1"
com.fasterxml.jackson.dataformat.xml.deser.ExceptionDeserializationTest.testEmptyString162,"IOException, ExceptionDeserializationTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest.testUnwrappedLists,"XmlMapper, Object, UnwrappedListsTest, UnwrappedListsTest$Value, UnwrappedListsTest$UnwrappedList"
com.fasterxml.jackson.dataformat.xml.ser.TestSerialization.testNakedMap,"TestSerialization$CustomMap, TestSerialization, Integer, LinkedHashMap, XmlMapper"
com.fasterxml.jackson.dataformat.xml.misc.ObjectId104Test.testSimpleCollectionDeserWithForwardRefs,"Integer, ObjectId104Test, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNested2_1,"NestedUnwrappedListsTest, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization.testWith2Bytes,"ByteBuffer, Object, TestBinaryStreamToXMLSerialization, XmlMapper, TestBinaryStreamToXMLSerialization$TestPojo"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testWriteToFile,"Object, File, XmlMapper, ObjectMapper, String, XmlGeneratorTest, XmlTestBase$IntWrapper"
com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization.testWith3Bytes,"ByteBuffer, Object, TestBinaryStreamToXMLSerialization, XmlMapper, TestBinaryStreamToXMLSerialization$TestPojo"
com.fasterxml.jackson.dataformat.xml.ser.TestJDKSerializability.testXmlFactory,"ClassNotFoundException, XmlFactory, TestJDKSerializability, StringWriter, ByteArrayInputStream, ObjectOutputStream, StringBuilder, ByteArrayOutputStream, ObjectInputStream, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest.testSimpleInvalid,"XmlFactory, ByteArrayInputStream, FormatDetectionTest, String, DataFormatMatcher, DataFormatDetector"
com.fasterxml.jackson.dataformat.xml.misc.TextValueTest.testSerializeAsText,"Object, ObjectWriter, TextValueTest, XmlMapper, TextValueTest$Simple"
com.fasterxml.jackson.dataformat.xml.MapperCopyTest.testMapperCopy,"XmlFactory, SerializationConfig, Object, MapperCopyTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.ser.TestIndentation.testSimpleStringBean,"Object, TestIndentation$StringWrapperBean, XmlMapper, StringBuilder, TestIndentation, String, XmlTestBase$StringWrapper, ObjectWriter"
com.fasterxml.jackson.dataformat.xml.lists.ListAnnotationSharingTest.testAnnotationSharing,"Object, ListAnnotationSharingTest$Wrapper, XmlMapper, ListAnnotationSharingTest$Point, List, ListAnnotationSharingTest, ArrayList"
com.fasterxml.jackson.dataformat.xml.misc.TextValueTest.testTextOnlyPojo,"TextValueTest$TextOnlyBean, Object, TextValueTest$TextOnlyWrapper, TextValueTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.MapperCopyTest.testCopyWith,"Object, MapperCopyTest$Pojo282, MapperCopyTest, XmlMapper, StringBuilder, ObjectMapper, String"
com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest.testSimpleValidXmlDecl,"XmlFactory, ByteArrayInputStream, FormatDetectionTest, JsonParser, String, DataFormatMatcher, DataFormatDetector"
com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest.testWrappedListWithGetters,"Object, List, ListDeserializationTest, ListDeserializationTest$PersonWithGetters, ArrayList, XmlMapper"
com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest.testListWithAttrOnlyValues,"ListRoundtripTest$PointContainer, Object, ListRoundtripTest, XmlMapper, List, ArrayList, ListRoundtripTest$Point"
com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest.testSimpleWithEmpty,"XmlFactory, JsonFactory, JsonGenerator, StringWriter, JsonParser, XmlParserTest"
com.fasterxml.jackson.dataformat.xml.deser.TestBinaryData.testTwoBinaryProps,"XmlMapper, TestBinaryData, StringBuilder, ObjectMapper, String"
com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest.testAsTextWithJAXB,"WithJAXBAnnotationsTest, Object, WithJAXBAnnotationsTest$WithXmlValue, XmlMapper"
com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNested1_2b,"NestedUnwrappedListsTest, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test.testNestedUnwrappedLists180,"NestedUnwrappedLists180Test, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.ser.TestIndentation.testEmptyElem,"TestIndentation, Object, TestIndentation$PojoFor123, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.NullConversionsGenericTest.testNullsToEmptyPojo,"NullConversionsGenericTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest.testRootName,"WithJAXBAnnotationsTest, WithJAXBAnnotationsTest$RootBean, Object, XmlMapper"
com.fasterxml.jackson.dataformat.xml.ser.TestSerializerCustom.testIssue42,"StdDeserializer, StdSerializer, Object, JsonGenerator, ObjectCodec, XmlMapper, Version, TestSerializerCustom$ItemSerializer, IllegalStateException, JsonParser, TestSerializerCustom$Item, TestSerializerCustom$Foo, SimpleModule, TestSerializerCustom$ItemDeserializer, TestSerializerCustom, JsonNode"
com.fasterxml.jackson.dataformat.xml.MapperCopyTest.testSerializerProviderCopy,"XmlRootNameLookup, MapperCopyTest, XmlSerializerProvider, DefaultSerializerProvider"
com.fasterxml.jackson.dataformat.xml.deser.TestViews.testIssue7,"Object, TestViews$Bar, TestViews$Foo, XmlMapper, ObjectMapper, TestViews, ObjectWriter"
com.fasterxml.jackson.dataformat.xml.misc.TextValueTest.testIssue24,"TextValueTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNested1_2,"NestedUnwrappedListsTest, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.MapperCopyTest.testMapperSerialization,"XmlFactory, MapperCopyTest, XmlMapper, ByteArrayInputStream, ObjectOutputStream, ByteArrayOutputStream, ObjectInputStream"
com.fasterxml.jackson.dataformat.xml.misc.EmptyPolymorphicTest.testEmpty,"EmptyPolymorphicTest, EmptyPolymorphicTest$Data, Object, EmptyPolymorphicTest$EmptyProxy, ObjectWriter, XmlMapper"
com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest.testSimpleValidComment,"XmlFactory, ByteArrayInputStream, FormatDetectionTest, JsonParser, String, DataFormatMatcher, DataFormatDetector"
com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest.testShortArrayToX,"Double, IllegalArgumentException, Object, XmlMapper, StringBuilder, ArrayConversionsTest, ObjectMapper, Class, Array, Number"
com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr.testSimpleNsAttr,"Object, TestSerializationAttr$NsAttrBean, TestSerializationAttr, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStreamTest.testEmptyTags,"XMLInputFactory, FromXmlParser$Feature, XmlTokenStream, XmlTokenStreamTest, StringReader, XMLStreamReader"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testRawOffsetAttribute,"XmlFactory, StringWriter, XmlGeneratorTest, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest.testDefaultWrapping,"Object, UnwrappedListsTest, UnwrappedListsTest$DefaultList, XmlMapper, JacksonXmlModule, UnwrappedListsTest$Value"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testRawOffsetValue,"XmlFactory, StringWriter, XmlGeneratorTest, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest.testListToIntArray,"ArrayConversionsTest, List, ArrayList, Integer, XmlMapper"
com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest.testUnwrappingSubWithAttribute,"ObjectMapper, ObjectWriter, UnwrappingWithXMLTest, ObjectReader"
com.fasterxml.jackson.dataformat.xml.jaxb.BuilderWithJAXB291Test.testBuilder291,"Object, XmlMapper, BuilderWithJAXB291Test$Address, JacksonAnnotationIntrospector, XmlJaxbAnnotationIntrospector, BuilderWithJAXB291Test, XmlAnnotationIntrospector$Pair"
com.fasterxml.jackson.dataformat.xml.deser.TestViews.testIssue44,"Object, XmlMapper, TestViews$Issue44Bean, SimpleFilterProvider, TestViews, ObjectWriter, SimpleBeanPropertyFilter"
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStreamTest.testRootAttributes,"XMLInputFactory, FromXmlParser$Feature, XmlTokenStream, XmlTokenStreamTest, StringReader, XMLStreamReader"
com.fasterxml.jackson.dataformat.xml.ser.TestSerializationOrdering.testOrdering,"Object, TestSerializationOrdering, TestSerializationOrdering$Bean91, XmlMapper"
com.fasterxml.jackson.dataformat.xml.deser.EmptyStringValueTest.testEmptyStringElement,"EmptyStringValueTest, XmlMapper"
com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest.testForceElementAsArray,"XmlFactory, FromXmlParser, StringWriter, XmlReadContext, XmlParserTest, StringReader"
com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest.testOptionalsWithMissingType,"UnwrappedListsTest, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.ser.TestSerialization.testSimpleAttrAndElem,"TestSerialization, Object, TestSerialization$AttrAndElem, XmlMapper"
com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest.testSimpleValidPI,"XmlFactory, ByteArrayInputStream, FormatDetectionTest, JsonParser, String, DataFormatMatcher, DataFormatDetector"
com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest.testRawCharArratAttribute,"XmlFactory, StringWriter, XmlGeneratorTest, QName, ToXmlGenerator"
com.fasterxml.jackson.dataformat.xml.deser.NullConversionsGenericTest.testNullsToGenericPojo,"Object, TypeReference, NullConversionsGenericTest, XmlMapper, XmlTestBase$Point, String, Integer, NullConversionsGenericTest$1, NullConversionsGenericTest$GeneralEmpty"
com.fasterxml.jackson.dataformat.xml.jaxb.JAXBObjectId170Test.testPolyIdList178,"Object, JAXBObjectId170Test, XmlMapper, JacksonAnnotationIntrospector, XmlJaxbAnnotationIntrospector, List, XmlAnnotationIntrospector$Pair"
com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest.testDefaultWrappingWithEmptyLists,"UnwrappedListsTest, XmlMapper, JacksonXmlModule"
com.fasterxml.jackson.dataformat.xml.ser.TestSerialization.testCDataStringArray,"TestSerialization, Object, TestSerialization$CDataStringArrayBean, XmlMapper"
com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest.testAsClassObject,"Object, PolymorphicTypesTest$SubTypeWithClassObject, PolymorphicTypesTest, PolymorphicTypesTest$BaseTypeWithClassObject, XmlMapper"
com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest.testArrayIdentityTransforms,"Double, IllegalArgumentException, Object, StringBuilder, ArrayConversionsTest, ObjectMapper, Class, Array, Number"
com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization.testRoundTripWithJacksonExample,"Object, XmlTestBase$FiveMinuteUser$Name, String, XmlTestBase$FiveMinuteUser, XmlMapper, TestDeserialization"
com.fasterxml.jackson.dataformat.xml.deser.CaseInsensitiveDeserTest.testCaseInsensitive1036,"ObjectMapper, CaseInsensitiveDeserTest"
com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty,"NestedUnwrappedListsTest, XmlMapper, List"
com.fasterxml.jackson.dataformat.xml.ser.TestIndentation.testWithAttr,"TestIndentation, XmlMapper, Object, TestIndentation$AttrBean, TestIndentation$AttrBean2"
com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization.testWith4Bytes,"ByteBuffer, Object, TestBinaryStreamToXMLSerialization, XmlMapper, TestBinaryStreamToXMLSerialization$TestPojo"
com.fasterxml.jackson.dataformat.xml.deser.SimpleStringValuesTest.testMissingString,"SimpleStringValuesTest, Object, XmlMapper, XmlTestBase$StringBean, StringBuilder"
