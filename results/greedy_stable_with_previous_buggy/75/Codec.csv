Project,Version,Strategy,Budget,SelectedTestCases
Codec,1,Total,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorld"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciibyteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodebyteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3""]"
Codec,1,Mean,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorld"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciibyteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodebyteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3""]"
Codec,1,Max,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorld"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciibyteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodebyteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3""]"
Codec,1,Min,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorld"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciibyteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodebyteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3""]"
Codec,1,TotalLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorld"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciibyteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodebyteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3""]"
Codec,1,MeanLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorld"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciibyteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodebyteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3""]"
Codec,1,MaxLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorld"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciibyteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodebyteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3""]"
Codec,1,MinLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorld"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciibyteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodebyteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3""]"
Codec,2,Total,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4""]"
Codec,2,Mean,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4""]"
Codec,2,Max,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4""]"
Codec,2,Min,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4""]"
Codec,2,TotalLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4""]"
Codec,2,MeanLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4""]"
Codec,2,MaxLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4""]"
Codec,2,MinLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4""]"
Codec,3,Total,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetSupportedBytesBadEnc"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull""]"
Codec,3,Mean,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetSupportedBytesBadEnc"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull""]"
Codec,3,Max,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetSupportedBytesBadEnc"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull""]"
Codec,3,Min,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetSupportedBytesBadEnc"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull""]"
Codec,3,TotalLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetSupportedBytesBadEnc"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull""]"
Codec,3,MeanLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetSupportedBytesBadEnc"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull""]"
Codec,3,MaxLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetSupportedBytesBadEnc"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull""]"
Codec,3,MinLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetSupportedBytesBadEnc"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull""]"
Codec,4,Total,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray""]"
Codec,4,Mean,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull""]"
Codec,4,Max,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull""]"
Codec,4,Min,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull""]"
Codec,4,TotalLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray""]"
Codec,4,MeanLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull""]"
Codec,4,MaxLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull""]"
Codec,4,MinLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull""]"
Codec,5,Total,75,"[""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight""]"
Codec,5,Mean,75,"[""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY""]"
Codec,5,Max,75,"[""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY""]"
Codec,5,Min,75,"[""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY""]"
Codec,5,TotalLines,75,"[""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight""]"
Codec,5,MeanLines,75,"[""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY""]"
Codec,5,MaxLines,75,"[""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY""]"
Codec,5,MinLines,75,"[""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY""]"
Codec,6,Total,75,"[""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable""]"
Codec,6,Mean,75,"[""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis""]"
Codec,6,Max,75,"[""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis""]"
Codec,6,Min,75,"[""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis""]"
Codec,6,TotalLines,75,"[""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable""]"
Codec,6,MeanLines,75,"[""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis""]"
Codec,6,MaxLines,75,"[""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis""]"
Codec,6,MinLines,75,"[""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis""]"
Codec,7,Total,75,"[""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize""]"
Codec,7,Mean,75,"[""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest""]"
Codec,7,Max,75,"[""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest""]"
Codec,7,Min,75,"[""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest""]"
Codec,7,TotalLines,75,"[""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize""]"
Codec,7,MeanLines,75,"[""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest""]"
Codec,7,MaxLines,75,"[""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest""]"
Codec,7,MinLines,75,"[""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest""]"
Codec,8,Total,75,"[""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode""]"
Codec,8,Mean,75,"[""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256""]"
Codec,8,Max,75,"[""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256""]"
Codec,8,Min,75,"[""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256""]"
Codec,8,TotalLines,75,"[""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode""]"
Codec,8,MeanLines,75,"[""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256""]"
Codec,8,MaxLines,75,"[""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256""]"
Codec,8,MinLines,75,"[""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256""]"
Codec,9,Total,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects""]"
Codec,9,Mean,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull""]"
Codec,9,Max,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull""]"
Codec,9,Min,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull""]"
Codec,9,TotalLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects""]"
Codec,9,MeanLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull""]"
Codec,9,MaxLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull""]"
Codec,9,MinLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull""]"
Codec,10,Total,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testEndMb"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomWords"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects""]"
Codec,10,Mean,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.language.CaverphoneTest.testEndMb"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomWords"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks""]"
Codec,10,Max,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.CaverphoneTest.testEndMb"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomWords"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks""]"
Codec,10,Min,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.language.CaverphoneTest.testEndMb"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomWords"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks""]"
Codec,10,TotalLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testEndMb"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomWords"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects""]"
Codec,10,MeanLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.language.CaverphoneTest.testEndMb"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomWords"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks""]"
Codec,10,MaxLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.CaverphoneTest.testEndMb"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomWords"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks""]"
Codec,10,MinLines,75,"[""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.SoundexTest.testMaxLength"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.language.CaverphoneTest.testEndMb"", ""org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomWords"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedExamples"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks""]"
Codec,11,Total,75,"[""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex""]"
Codec,11,Mean,75,"[""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH""]"
Codec,11,Max,75,"[""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation""]"
Codec,11,Min,75,"[""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF""]"
Codec,11,TotalLines,75,"[""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage""]"
Codec,11,MeanLines,75,"[""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16""]"
Codec,11,MaxLines,75,"[""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException""]"
Codec,11,MinLines,75,"[""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples""]"
Codec,12,Total,75,"[""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte""]"
Codec,12,Mean,75,"[""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2""]"
Codec,12,Max,75,"[""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2""]"
Codec,12,Min,75,"[""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes""]"
Codec,12,TotalLines,75,"[""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic""]"
Codec,12,MeanLines,75,"[""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3""]"
Codec,12,MaxLines,75,"[""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3""]"
Codec,12,MinLines,75,"[""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode""]"
Codec,13,Total,75,"[""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException""]"
Codec,13,Mean,75,"[""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte""]"
Codec,13,Max,75,"[""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testDifference""]"
Codec,13,Min,75,"[""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString""]"
Codec,13,TotalLines,75,"[""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray""]"
Codec,13,MeanLines,75,"[""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset""]"
Codec,13,MaxLines,75,"[""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode""]"
Codec,13,MinLines,75,"[""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.language.NysiisTest.testDropBy""]"
Codec,14,Total,75,"[""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull""]"
Codec,14,Mean,75,"[""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall""]"
Codec,14,Max,75,"[""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall""]"
Codec,14,Min,75,"[""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall""]"
Codec,14,TotalLines,75,"[""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeZeroes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull""]"
Codec,14,MeanLines,75,"[""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall""]"
Codec,14,MaxLines,75,"[""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall""]"
Codec,14,MinLines,75,"[""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.HexTest.testDencodeEmpty"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall""]"
Codec,15,Total,75,"[""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be""]"
Codec,15,Mean,75,"[""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch""]"
Codec,15,Max,75,"[""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch""]"
Codec,15,Min,75,"[""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch""]"
Codec,15,TotalLines,75,"[""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be""]"
Codec,15,MeanLines,75,"[""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch""]"
Codec,15,MaxLines,75,"[""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch""]"
Codec,15,MinLines,75,"[""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch""]"
Codec,16,Total,75,"[""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull""]"
Codec,16,Mean,75,"[""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex""]"
Codec,16,Max,75,"[""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex""]"
Codec,16,Min,75,"[""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex""]"
Codec,16,TotalLines,75,"[""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull""]"
Codec,16,MeanLines,75,"[""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex""]"
Codec,16,MaxLines,75,"[""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex""]"
Codec,16,MinLines,75,"[""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex""]"
Codec,17,Total,75,"[""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds""]"
Codec,17,Mean,75,"[""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.NysiisTest.testBran""]"
Codec,17,Max,75,"[""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.NysiisTest.testBran""]"
Codec,17,Min,75,"[""org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.NysiisTest.testBran""]"
Codec,17,TotalLines,75,"[""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength""]"
Codec,17,MeanLines,75,"[""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.NysiisTest.testBran""]"
Codec,17,MaxLines,75,"[""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.NysiisTest.testBran""]"
Codec,17,MinLines,75,"[""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.language.NysiisTest.testBran""]"
Codec,18,Total,75,"[""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace""]"
Codec,18,Mean,75,"[""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException""]"
Codec,18,Max,75,"[""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException""]"
Codec,18,Min,75,"[""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException""]"
Codec,18,TotalLines,75,"[""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"", ""org.apache.commons.codec.net.QCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"", ""org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.net.QCodecTest.testNullInput"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"", ""org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testB650"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"", ""org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"", ""org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"", ""org.apache.commons.codec.digest.B64Test.testB64from24bit"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.language.MetaphoneTest.testExceedLength"", ""org.apache.commons.codec.binary.Base64Test.testTripletsChunked"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"", ""org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"", ""org.apache.commons.codec.digest.B64Test.testB64T"", ""org.apache.commons.codec.digest.Md5CryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger2"", ""org.apache.commons.codec.language.NysiisTest.testSnat"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"", ""org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger3"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.NysiisTest.testCap"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytes"", ""org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"", ""org.apache.commons.codec.CharEncodingTest.testUsAscii"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testCodec68"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.net.QCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"", ""org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha224"", ""org.apache.commons.codec.language.Caverphone2Test.testEndMb"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.CharEncodingTest.testIso8859_1"", ""org.apache.commons.codec.binary.Base32Test.testBase32Samples"", ""org.apache.commons.codec.binary.Base64Test.testEmptyBase64"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger4"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"", ""org.apache.commons.codec.binary.Base64Test.testKnownEncodings"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"", ""org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"", ""org.apache.commons.codec.language.NysiisTest.testDropBy"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"", ""org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"", ""org.apache.commons.codec.language.NysiisTest.testSnad"", ""org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"", ""org.apache.commons.codec.binary.Base64Test.testPairs"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"", ""org.apache.commons.codec.binary.HexTest.testGetCharset"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.CharsetsTest.testToCharset"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"", ""org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"", ""org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Le"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"", ""org.apache.commons.codec.digest.CryptTest.testCrypt"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"", ""org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"", ""org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace""]"
Codec,18,MeanLines,75,"[""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException""]"
Codec,18,MaxLines,75,"[""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException""]"
Codec,18,MinLines,75,"[""org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.net.URLCodecTest.testEncodeNull"", ""org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"", ""org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"", ""org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha256"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"", ""org.apache.commons.codec.binary.Base64Test.testBase64"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testUUID"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"", ""org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha384"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha512"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"", ""org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"", ""org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"", ""org.apache.commons.codec.binary.StringUtilsTest.testConstructor"", ""org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"", ""org.apache.commons.codec.binary.Base64Test.testCodec112"", ""org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"", ""org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"", ""org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"", ""org.apache.commons.codec.language.SoundexTest.testDifference"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"", ""org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"", ""org.apache.commons.codec.language.MetaphoneTest.testWhy"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"", ""org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"", ""org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"", ""org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"", ""org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"", ""org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"", ""org.apache.commons.codec.language.NysiisTest.testOthers"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"", ""org.apache.commons.codec.CharEncodingTest.testUtf16Be"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"", ""org.apache.commons.codec.net.BCodecTest.testDecodeObjects"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"", ""org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"", ""org.apache.commons.codec.CharEncodingTest.testUtf8"", ""org.apache.commons.codec.net.BCodecTest.testNullInput"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot1"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"", ""org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"", ""org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"", ""org.apache.commons.codec.language.NysiisTest.testRule4Dot2"", ""org.apache.commons.codec.binary.Base64Test.testUrlSafe"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"", ""org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"", ""org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"", ""org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"", ""org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"", ""org.apache.commons.codec.language.NysiisTest.testRule5"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"", ""org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"", ""org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"", ""org.apache.commons.codec.binary.Base64Test.testSingletons"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"", ""org.apache.commons.codec.binary.Base64Test.testTriplets"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.net.UtilsTest.testConstructor"", ""org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"", ""org.apache.commons.codec.language.NysiisTest.testRule2"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"", ""org.apache.commons.codec.binary.Base64Test.testNonBase64Test"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"", ""org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"", ""org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"", ""org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"", ""org.apache.commons.codec.binary.Base32Test.testCodec200"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"", ""org.apache.commons.codec.language.MetaphoneTest.testPHTOF"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"", ""org.apache.commons.codec.language.RefinedSoundexTest.testDifference"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"", ""org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"", ""org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"", ""org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"", ""org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"", ""org.apache.commons.codec.CharsetsTest.testUtf16"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"", ""org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"", ""org.apache.commons.codec.language.NysiisTest.testRule1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"", ""org.apache.commons.codec.binary.HexTest.testGetCharsetName"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"", ""org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"", ""org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"", ""org.apache.commons.codec.language.RefinedSoundexTest.testEncode"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"", ""org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"", ""org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"", ""org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"", ""org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"", ""org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testFal"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"", ""org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"", ""org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"", ""org.apache.commons.codec.binary.Base32Test.testBase32Chunked"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"", ""org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"", ""org.apache.commons.codec.language.NysiisTest.testRule6"", ""org.apache.commons.codec.language.NysiisTest.testDan"", ""org.apache.commons.codec.language.MetaphoneTest.testMetaphone"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"", ""org.apache.commons.codec.language.NysiisTest.testTrueVariant"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"", ""org.apache.commons.codec.language.NysiisTest.testRule7"", ""org.apache.commons.codec.binary.HexTest.testRequiredCharset"", ""org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"", ""org.apache.commons.codec.CharEncodingTest.testConstructor"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"", ""org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"", ""org.apache.commons.codec.CharsetsTest.testUtf16Be"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"", ""org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"", ""org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"", ""org.apache.commons.codec.language.ColognePhoneticTest.testExamples"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"", ""org.apache.commons.codec.binary.Base64Test.testConstructors"", ""org.apache.commons.codec.language.MetaphoneTest.testTCH"", ""org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"", ""org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"", ""org.apache.commons.codec.language.SoundexTest.testBadCharacters"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"", ""org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"", ""org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"", ""org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"", ""org.apache.commons.codec.net.BCodecTest.testEncodeObjects"", ""org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"", ""org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"", ""org.apache.commons.codec.language.SoundexTest.testEncodeBasic"", ""org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"", ""org.apache.commons.codec.CharsetsTest.testUsAscii"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"", ""org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"", ""org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"", ""org.apache.commons.codec.CharsetsTest.testIso8859_1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"", ""org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"", ""org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.language.NysiisTest.testBran"", ""org.apache.commons.codec.binary.HexTest.testCustomCharset"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"", ""org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"", ""org.apache.commons.codec.language.NysiisTest.testTranan"", ""org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"", ""org.apache.commons.codec.digest.UnixCryptTest.testCtor"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"", ""org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"", ""org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"", ""org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"", ""org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"", ""org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"", ""org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"", ""org.apache.commons.codec.language.NysiisTest.testSpecialBranches"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"", ""org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"", ""org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"", ""org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"", ""org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"", ""org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"", ""org.apache.commons.codec.binary.Base64Test.testCodeInteger1"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"", ""org.apache.commons.codec.CharsetsTest.testUtf16Le"", ""org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"", ""org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"", ""org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"", ""org.apache.commons.codec.CharsetsTest.testUtf8"", ""org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"", ""org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructor0"", ""org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"", ""org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"", ""org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"", ""org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"", ""org.apache.commons.codec.binary.Base64Test.testKnownDecodings"", ""org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"", ""org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance2"", ""org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"", ""org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"", ""org.apache.commons.codec.language.Caverphone1Test.testEndMb"", ""org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"", ""org.apache.commons.codec.CharEncodingTest.testUtf16"", ""org.apache.commons.codec.binary.Base64Test.testIsStringBase64"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"", ""org.apache.commons.codec.language.NysiisTest.testDad"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance3"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"", ""org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"", ""org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"", ""org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"", ""org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"", ""org.apache.commons.codec.DecoderExceptionTest.testConstructorString"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"", ""org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"", ""org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"", ""org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"", ""org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"", ""org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"", ""org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"", ""org.apache.commons.codec.language.SoundexTest.testNewInstance"", ""org.apache.commons.codec.digest.Sha2CryptTest.testCtor"", ""org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"", ""org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"", ""org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"", ""org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"", ""org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"", ""org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"", ""org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"", ""org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"", ""org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"", ""org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"", ""org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"", ""org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException""]"
